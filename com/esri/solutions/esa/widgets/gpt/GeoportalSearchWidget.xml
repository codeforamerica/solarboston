<configuration>

  <!--
  If on webserver and you may have search results with services, or search urls
  that do not have a crossdomain.xml then it can be used. 
  
  @proxyUrl is optional.  If empty, the default jsp or php or asp file will be
    used. If you are using ESRI Situational Awareness then it recommmended you use
    this attribute.
   -->
  <useProxy proxyUrl="">true</useProxy>
  
  <!-- 
  /gptEndPoint - Elements pointing to gpt end points
  @name will be listed in the drop down
  @url Can be relative or aboulute.  url to the rest 
     endpoint(e.g. ./rest/find/document?f=georss) or to the rest repositories list 
     (e.g. /rest/repositories?f=xml).  Must be to xml endpoint only
  @linkParserId is linked to element linkParser. if left out, "default" assumed
  @useNameAsPrefix if url points to repositories list then the attribute
     specifies whether the @name should be used as the prefix  
  -->
   <gptEndpoint url="http://www.geodata.gov/Portal/rest/find/document?isPartOf=geodata.gov" 
    name="GOS  http://www.geodata.gov"/>
        
    
  <!-- Label properties.  Can be localized.  
  @value Can be changed
  @name is a key. Do not change -->      
  <label name="lblZoomTo" value="Zoom To"/>
  <label name="lblHighlight" value="Highlight"/>
  <label name="lblUnHighlight" value="Un-Highlight"/>
  <label name="lblViewMetadata" value="Metadata"/>
  <label name="lblViewDetails" value="Details"/>
  <label name="lblSearch" value="Search"/>
  <label name="lblAddToMap" value="Add To Map"/>
  <label name="lblConfigSearch" value="Configure Search"/>
  <label name="lblSearchResults" value="Search Results"/>
  <label name="lblLiveData" value="Live Data Maps"/>
  <label name="lblOptAnywhere" value="Anywhere"/>
  <label name="lblOptIntersect" value="Intersecting"/>
  <label name="lblOptContains" value="Fully within"/>
  <label name="msgSearching" value="Searching"/>
  <label name="msgSearchSummary" value="{0} matching documents found"/>
  <label name="lblShowMore" value="Show More"/>
  <label name="lblErrorTitle" value="Error"/>
  <label name="lblErrCantSearch" value="Error while performing search"/>
  <label name="lblErrGeneral" value="Could not perform operation"/>
  <label name="lblHelp" value="Help"/>
  
  <!-- Other Configurations -->
  <searchTimeout>90</searchTimeout><!-- Seconds -->
  <addLayerTimeout>90</addLayerTimeout><!-- Seconds -->
  <iconSearch>com/esri/solutions/flexviewer/assets/images/icons/i_searchtext.png</iconSearch>
  <iconResult>com/esri/solutions/flexviewer/assets/images/icons/i_table.png</iconResult>
  <iconHelp>com/esri/solutions/flexviewer/assets/images/icons/i_help.png</iconHelp>
  
  <zoomFactor>3</zoomFactor>
  <urlHelp>http://webhelp.esri.com/geoportal_extension/9.3.1/index.htm#flex_widget.htm</urlHelp>
  
  <!--regWebContext =  Used to match the webcontext so as to automate getting the 
  endpoint for relative URLS -->
  <regWebContext>.*\/{2}[^\/]*\/[^\/]*</regWebContext>
  
  <linkParser id="default">
    <!-- 
    Detects if the gptEndpoint is a url to an xml document with a list of xml documents
     -->
    <regDetectEndpointListUrl>.*rest\/repositories.*</regDetectEndpointListUrl>
    <!-- regExtractExtSearchPrfx -- The url specified in gptEndpoint will be processed to determine then remote/external search
    site id in the same site as the gpt endpoint
    - The regExtract* elements can take a @replaceDelimeter and an @delimeter.  if you have
      (reg[replaceDelimeter]string[delimeter])* the reg will be used with to look for section
      to replaces with the string 
     -->
    <regExtractExtSearchPrfx replaceDelimeter="|" delimeter="~">repositories.*|find/document?rid={id}</regExtractExtSearchPrfx>
    <!-- Watch out for escaped url special chracters.  
      Most likely they will be escaped 
      The regexs below work by using string.replace(reg, "").  -->
    <regDetectMapLinkProvider><![CDATA[.*command.addToMap.*|.*resources=map%3(A|a).*%40.*|.*livedata.*preview.page.*]]></regDetectMapLinkProvider>
    <regExtractMapservice delimeter="~"><![CDATA[.*resources=map%3(A|a).*%40~.*livedata.*preview.page.*url=~.*command=addToMap.*server=~&info=.*~&serviceType=.*~&resourceType=.*]]></regExtractMapservice>
    <regExtractMapLinkType delimeter="~"><![CDATA[.*resources=map%3A~%40.*~.*serviceType=~.*resourceType=~&info=.*]]></regExtractMapLinkType>
    <regExcludeLinks><![CDATA[.*resources=map%3(A|a).*%40.*|.*preview.page.*|.*command.addToMap.*]]></regExcludeLinks>
    <!-- Once RegExtractMapService is used, the below will be applied to each type (its unescaped after the extract)
     -->
    <regLinkTypes>
      <wms>
      <!-- Extracted map link type will be matched agains first then the url 
       -->
        <regDetect><![CDATA[WMS|wms|.*service=wms.*|.*wmsserver.*|.*com.esri.wms.esrimap.*]]></regDetect>
       </wms>
      <agsRest>
        <regDetect><![CDATA[.*rest\/services.*ap.erver.*]]></regDetect>
      </agsRest>
      <geoRss>
        <regDetect>georss</regDetect>
      </geoRss>
      <arcIms>
        <regDetect><![CDATA[aims|arcims|image|.*servlet.*com.esri.esrimap.Esrimap.*]]></regDetect>
        <regExtractHost delimeter="~"><![CDATA[\/[a-zA-Z|_|-]*$~\/servlet.*com.esri.esrimap.Esrimap.*~.*server=~&service=.*]]></regExtractHost>
        <regExtractServiceName delimeter="~"><![CDATA[.*\/~.*serviceName=~.*ServiceName=~.*service=~&serviceType=.*]]></regExtractServiceName>
      </arcIms>
    </regLinkTypes>
  </linkParser>
  
  <!-- Color for the bounding boxes -->  
  <color id="mainBboxesPlain"
    fillColor="0xFF0000" 
    fillAlpha="0.001"
    fillStyle="null"
    outlineColor="0xFF0000" 
    outlineWidth="2" 
    outlineAlpha="1"
    outlineStyle="solid"/>
    
  <!-- Color for the bounding boxes if highlighted -->  
  <color id="mainBboxesHighlight"
    fillColor="0xFF0000" 
    fillStyle="null"
    fillAlpha="0.001"
    outlineColor="0xFF0000" 
    outlineWidth="5"
    outlineAlpha="1"
    outlineStyle="solid"/> 
  
</configuration>